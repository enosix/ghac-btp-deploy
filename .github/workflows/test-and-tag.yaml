name: Test and Tag

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag Name'
        required: true
        default: 'dev'
        type: choice
        options:
          - 'dev'
          - 'stable'

env:
  BTP_URL: https://api.cf.us10.hana.ondemand.com
  CF_ORG: en06-dev-aws
  CF_SPACE: dev

permissions:
  contents: write
  packages: read

jobs:
  test-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Get Secrets
        uses: bitwarden/sm-action@v2
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          secrets: |
            cef670b6-a372-4ee7-8d86-b1a000f56a3c > CF_USERNAME
            6db2a260-106e-4a5a-b612-b1a000f5a374 > CF_PASSWORD
      
      - uses: actions/checkout@v4
      
      - name: Deploy to BTP
        uses: ./
        with:
          api: ${{ env.BTP_URL }}
          username: ${{ env.CF_USERNAME }}
          password: ${{ env.CF_PASSWORD }}
          org: ${{ env.CF_ORG }}
          space: ${{ env.CF_SPACE }}
          manifest: 'manifest.yml'
      
      - name: Cleanup PR
        uses: ./
        with:
          api: ${{ env.BTP_URL }}
          username: ${{ env.CF_USERNAME }}
          password: ${{ env.CF_PASSWORD }}
          org: ${{ env.CF_ORG }}
          space: ${{ env.CF_SPACE }}
          command: cf delete ghac-btp-deploy-pr -f -r
          
      - name: Create tag
        if: github.event_name != 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'tags/${{ github.event.inputs.tag }}',
                sha: context.sha,
              })
            } catch (err) {
              console.log(err)

              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/${{ github.event.inputs.tag }}',
                sha: context.sha,
              })
            }