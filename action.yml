name: 'BTP Deploy'
description: |
  Deploy to BTP.
inputs:
  api:
    description: 'BTP Api URL'
    default: 'https://api.cf.us10.hana.ondemand.com'
  username:
    description: 'Username for API authentication'
    required: true
  password:
    description: 'Password for API authentication'
    required: true
  org:
    description: 'Target org'
    required: false
  space:
    description: 'Target space'
    required: false
  manifest:
    description: 'Path to manifest file'
    required: false
    default: ''
  vars:
    description: 'Manifest variables'
    required: false
    default: ''
  docker_password:
    description: 'Docker password'
    required: false
    default: ''
  command:
    description: 'Command to run'
    required: false
    default: ''
  cli_version:
    description: 'CF CLI version'
    required: false
    default: 'v7'

runs:
  using: "composite"
  steps:
  - name: Install CF CLI
    shell: bash
    run: |
      tar -zxf "${GITHUB_ACTION_PATH}/bin/${{ inputs.cli_version }}.tgz"
      chmod +x cf*
      ./cf version
  
  - name: Login to BTP
    shell: bash
    run: |
      ./cf api "${{ inputs.api }}"
      ./cf auth
      ./cf target -o "${{ inputs.org }}" -s "${{ inputs.space }}"
    env:
      CF_USERNAME: ${{ inputs.username }}
      CF_PASSWORD: ${{ inputs.password }}

  - name: Deploy to Cloud Foundry
    if: inputs.manifest != ''
    shell: bash
    id: cf-deploy
    run: |
      cat <<-EOF_91aca66dc10f4085b860752b4f3f8399 > vars.yaml
      ${{ inputs.vars }}
      EOF_91aca66dc10f4085b860752b4f3f8399
      
      OUTPUT_FILE=$(mktemp)
      # Run cf push and tee the output to both console and file
      ./cf push -f "${{ inputs.manifest }}" --vars-file "vars.yaml" | tee ${OUTPUT_FILE}
      
      # Extract the URL from the output and store it in an environment variable
      APP_URL=$(grep -o 'routes:.*\(.\+\)' ${OUTPUT_FILE} | tail -1 | awk '{print $NF}')
      
      echo "cf_app_url=${APP_URL}" >> $GITHUB_OUTPUT\
      rm ${OUTPUT_FILE}
    env:
      CF_DOCKER_PASSWORD: ${{ inputs.docker_password }}

  - name: Run command
    if: inputs.command != ''
    shell: bash
    run: |
      PATH=$PATH:$(pwd)
      ${{ inputs.command }}
    env:
      CF_DOCKER_PASSWORD: ${{ inputs.docker_password }}
      
  - uses: mshick/add-pr-comment@v2
    if: always() && github.event_name == 'pull_request'
    with:
      message: |
        Your PR has been deployed to ${{ steps.profile.outputs.url }}
      message-failure: |
        Your PR failed to deploy. Please check the logs.
      refresh-message-position: true